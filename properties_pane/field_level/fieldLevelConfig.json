/*
* Copyright © 2016-2019 by IntegrIT S.A. dba Hackolade.  All rights reserved.
*
* The copyright to the computer software herein is the property of IntegrIT S.A.
* The software may be used and/or copied only with the written permission of 
* IntegrIT S.A. or in accordance with the terms and conditions stipulated in 
* the agreement/contract under which the software has been supplied. 


In order to define custom properties for any object's properties pane, you may copy/paste from the following,
making sure that you maintain a proper JSON format.

			{
				"propertyName": "Simple text",
				"propertyKeyword": "simpletextProp",
				"propertyType": "text",
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Text area",
				"propertyKeyword": "textareaProp",
				"propertyTooltip": "Popup for multi-line text entry",
				"propertyType": "details",
				"template": "textarea"
			},
			{
				"propertyName": "Dropdown selection",
				"propertyKeyword": "dropdownProp",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": [
					"Option 1",
					"Option 2",
					"Option 3",
					"Option 4"
				]
			},
			{
				"propertyName": "Numeric",
				"propertyKeyword": "numericProp",
				"propertyValidate": true,
				"propertyType": "numeric",
				"valueType": "number",
				"allowNegative": false,
				"sampleGen": "&containerName|&entityName|&random|<value>"
			},
			{
				"propertyName": "Checkbox",
				"propertyKeyword": "checkboxProp",
				"propertyType": "checkbox"
			},
			{
				"propertyName": "Group",
				"propertyType": "group",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
// “groupInput” can have the following states - 0 items, 1 item, and many items.
// “blockInput” has only 2 states - 0 items or 1 item. 
// This gives us an easy way to represent it as an object and not as an array internally which is beneficial for processing 
// and forward-engineering in particular.
			{
				"propertyName": "Block",
				"propertyType": "block",
				"propertyKeyword": "grpProp",
				"propertyTooltip": "",
				"structure": [
					{
						"propertyName": "Simple Grp Text",
						"propertyKeyword": "simpleGrpText",
						"propertyTooltip": "",
						"propertyType": "text"
					},
					{
						"propertyName": "Group Number",
						"propertyKeyword": "grpNumber",
						"propertyType": "numeric",
						"valueType": "number",
						"allowNegative": false
					}
				]
			},
			{
				"propertyName": "Field List",
				"propertyKeyword": "keyList",
				"propertyType": "fieldList",
				"template": "orderedList"
			}, 
			{
				"propertyName": "List with attribute",
				"propertyKeyword": "keyListOrder",
				"propertyType": "fieldList",
				"template": "orderedList",
				"attributeList": [
					"ascending",
					"descending"
				]
			}

*/

{
	"lowerTab": "JsonDetails",
	"structure": {
		"objectId": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"default",
			"required",
			"primaryKey",
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"sample",
			"comments"
		],
		"string": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"format",
			"minLength",
			"maxLength",
			"pattern",
			"default",
			"enum",
			"required",
			"dependencies",
			"primaryKey",
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"sample",
			"comments"
		],
		"numeric": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			{
				"propertyName": "Subtype",
				"propertyKeyword": "mode",
				"propertyTooltip": "Select from list of options",
				"propertyType": "select",
				"options": ["", "int32", "int64", "double"]
			},
			"minimum",
			"exclusiveMinimum",
			"maximum",
			"exclusiveMaximum",
			"multipleOf",
			"divisibleBy",
			"unit",
			"default",
			"enum",
			"required",
			"dependencies",
			"primaryKey",
			"foreignCollection",
			"foreignField",
			"relationshipType",
			"sample",
			"comments"
		],
		"boolean": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"default",
			"required",
			"dependencies",
			"sample",
			"comments"
		],
		"object": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"required",
			"minProperties",
			"maxProperties",
			"dependencies",
			"additionalProperties",
			"comments"
		],
		"array": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"minItems",
			"maxItems",
			"uniqueItems",
			"dependencies",
			"required",
			"additionalItems",
			"comments"
		],
		"binary": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"required",
			"dependencies",
			"sample",
			"comments"
		],
		"date": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"pattern",
			"required",
			"dependencies",
			{
				"fieldName": "Sample",
				"fieldKeyword": "sample",
				"shouldValidate": true,
				"fieldType": "dynamicField",
				"changeAction": "changeSampleOfField",
				"shadowState": true,
				"valueType": "string"
			},
			"comments"
		],
		"timestamp": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"pattern",
			"required",
			"dependencies",
			"sample",
			"comments"
		],
		"regex": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"pattern",
			"required",
			"dependencies",
			"sample",
			"comments"
		],
		"null": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"comments"
		],
		"minKey": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"pattern",
			"required",
			"dependencies",
			"sample",
			"comments"
		],
		"maxKey": [
			{
				"fieldKeyword": "code",
				"validation": {
					"regex": "^(\\$id|\\$ref|\\$db|(?![\\s\\S]*\\.)(?!\\$[\\s\\S]*)([\\s\\S]*))$"
				}
			},
			"schemaId",
			"description",
			"type",
			"pattern",
			"required",
			"dependencies",
			"sample",
			"comments"
		]
	}
}
